---
layout: PostLayout
title: '系统设计：短链服务'
date: 2022-03-12 20:13:32
tags: ['系统设计']
---

短链接的现实生活中比较常见，比如我们接受到的广告短信、微信分享、二维码链接等。其优势是比较短，既美观也能满足字数的限制。

短链基本原理：

将短链标识，传递给服务器，服务器匹配后返回长链接。

熟悉计算机网络的大家都知道301和302都有重定向的功能，那这里为什么选择302呢？

这也是面试官经常会问到的一个小问题。

所以这里就需要了解 301 和 302 的区别：

301永久重定向，即浏览器只需要第一次请求拿到长链接后，下次再去访问这个短链就不会向短网址服务器请求了，而是直接从浏览器的缓存里拿。这样可以提高浏览器的访问速度，但是也有一个问题，就是如果我们想统计活动链接的访问数据的话就无从下手了。或者是这个活动结束了我想删除访问入口，但由于浏览器缓存可能还会导致有用户访问到。所以我们一般不使用301。 

302 临时重定向，即每次访问短链都会去请求短网址服务器（除非响应中用 Cache-Control 或 Expired 暗示浏览器缓存），这样就便于 server 数据监控，所以虽然用 302 会给 server 增加一点压力，但明显是利大于弊的。

基本功能：

短链转换：访问后重定向到长网址。

短链管理：提供将长网址转换成短链的功能，支持设置短链的有效时长，启用、禁用短链，修改短链的映射。

访问日志分析：分析nginx的访问日志，将访问记录保存至MySQL。

访问统计：统计访问记录，获取访问的IP、客户端代理，从而提炼并统计访问的区域、设备等信息。

技术栈：OpenResty + MySQL

前台应用需要支持较高的并发量，传统Tomcat服务器不一定能满足性能要求。OpenResty支持我们通过Lua脚本扩展NGINX来实现高性能的Web服务，所以使用它来实现短链访问服务。

关于62进制，就是使用[0-9][A-Z][a-z]62位数字加大小写字母来组合，例如短码4c92对应是十进制数就是2*62+9*62*62+39*62*62*62+4*62*62*62*62=1000000。


